<?xml version="1.0"?>
<launch>
  <arg name="namespace" default="/hsrb" />
  <arg name="enable_emergency_stop" default="true" />
  <arg name="use_laser_odom" default="true" />
  <arg name="odometry_config" default="$(find hsrb_common_config)/params/hsrb_odometry_config.yaml" />
  <arg name="bumper_mode" default="stop" />
  <arg name="target_controller_list" default="[omni_base_controller, head_trajectory_controller, arm_trajectory_controller, gripper_controller]"/>
  <arg name="stop_target_controller_list" default="$(arg target_controller_list)"/>

  <group ns="$(arg namespace)">
    <remap from="robot_description" to="$(arg namespace)/robot_description" />
    <remap from="/diagnostics" to="$(arg namespace)/diagnostics" />
    <remap from="joint_states" to ="$(arg namespace)/joint_states" />
    <remap from="/joint_states" to ="$(arg namespace)/joint_states" />

    <!-- joint_statesを閉じ込めるためのネームスペース -->
    <group ns="robot_state">
      <!-- joint state publisher(0.9.4以降のjoint_state_controllerで不要になる) -->
      <node name="joint_state_pub" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="publish_default_velocities" value="true" />
        <param name="publish_default_efforts" value="true" />
        <param name="rate" value="50" />
        <!-- TUe added -->
        <rosparam subst_value="true">
          source_list:
          - $(arg namespace)/joint_states_hardware
        </rosparam>
      </node>

      <!-- robot state publisher -->
      <node name="robot_state_pub" pkg="robot_state_publisher" type="robot_state_publisher">
        <param name="publish_frequency" value="50.0" />
        <param name="use_tf_static" value="true" />
      </node>
    </group>

    <!-- angle_sensors_alignment -->
    <node name="angle_sensors_alignment_node" pkg="hsrb_angle_sensors_alignment" type="angle_sensors_alignment_node"
          respawn="false"
          output="screen" />

    <!-- suction action -->
    <node name="suction_server" pkg="tmc_suction" type="suction_server" >
      <remap from="suction_on" to="command_suction" />
      <remap from="pressure_sensor_on" to="pressure_sensor" />
    </node>

    <!-- led color control -->
    <node name="status_led_node" pkg="hsrb_status_led" type="status_led_node" />

    <!-- bumper action -->
    <node name="hsrb_bumper" pkg="hsrb_bumper" type="hsrb_bumper_node" >
      <rosparam file="$(find hsrb_bumper)/param/mode_dict.yaml" command="load" />
      <param name="enable_emergency_stop" value="$(arg enable_emergency_stop)" />
      <param name="bumper_mode" value="$(arg bumper_mode)" />
      <param name="temp_object_radius" value="0.03" />
      <param name="temp_object_point_num" value="20" />
      <param name="temp_object_delete_timer" value="30" />
      <param name="head_move_cancel" value="true" />
      <param name="arm_move_cancel" value="true" />
      <param name="gripper_grasp_cancel" value="true" />
      <param name="crescent_moon_object" value="false" />
      <param name="bumper_binarization" value="false" />
      <param name="to_temp_object_distance" value="0.7" />
      <rosparam param="target_controller_list" subst_value="True">$(arg target_controller_list)</rosparam>
      <rosparam param="stop_target_controller_list" subst_value="True">$(arg stop_target_controller_list)</rosparam>
    </node>

    <!-- odometry_switcher -->
    <node name="odometry_switcher" pkg="tmc_odometry_switcher" type="odometry_switcher_node">
      <!-- TUe commented
      <remap from="switched_odom" to="odom"/>
      -->
      <!-- TUe added 3x -->
      <remap from="switched_odom" to="base/measurements"/>
      <remap from="wheel_odom" to="base/measurements_wheel"/>
      <remap from="laser_odom" to="base/measurements_laser"/>

      <rosparam command="load" file="$(arg odometry_config)"/>
      <param name="initial_odom" value="laser_odom" if="$(arg use_laser_odom)"/>
      <param name="initial_odom" value="wheel_odom" unless="$(arg use_laser_odom)"/>
    </node>
  </group>
</launch>
