<?xml version="1.0"?>
<launch>
  <!-- Modified version of hsrb_gazebo_bringup/launch/include/hsrb_bringup.xml -->
  <arg name="namespace" default="/hsrb" />
  <arg name="use_laser_odom" default="true" />

  <group ns="$(arg namespace)">
    <rosparam file="$(find hsrb_common_config)/params/hsrb_sensor_config.yaml" command="load" />
  </group>
  <rosparam file="$(find hsrb_gazebo_bringup)/params/hsrb_sensor_config.yaml" command="load" />
  <remap from="joint_states" to="$(arg namespace)/joint_states" />
  <remap from="/joint_states" to="$(arg namespace)/joint_states" />

  <!-- convert joint states to TF transforms for rviz, etc -->
<!--
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"
        respawn="false" output="screen" >
    <rosparam param="source_list">["/hsrb/joint_states"]</rosparam>
  </node>
-->
  <group ns="$(arg namespace)/robot_state">
    <node name="joint_state_pub" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="publish_default_velocities" value="true" />
      <param name="publish_default_efforts" value="true" />
      <param name="rate" value="50" />
      <rosparam subst_value="true">
        source_list:
          - $(arg namespace)/joint_states_hardware
      </rosparam>
    </node>

    <!-- robot state publisher -->
    <node name="robot_state_pub" pkg="robot_state_publisher" type="robot_state_publisher">
      <param name="publish_frequency" value="50.0" />
      <param name="use_tf_static" value="true" />
    </node>
  </group>

  <!-- laser-odometry -->
  <group ns="$(arg namespace)" if="$(arg use_laser_odom)">
    <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node">
      <remap from="scan" to="$(arg namespace)/base_scan"/>
      <remap from="pose_stamped" to="$(arg namespace)/base_pose"/>
    </node>

    <!-- pose_to_odom -->
    <node name="pose_stamped_to_odometry" pkg="topic_tools" type="transform"
          args="$(arg namespace)/base_pose $(arg namespace)/laser_odom nav_msgs/Odometry
    'nav_msgs.msg.Odometry(header=m.header, pose=geometry_msgs.msg.PoseWithCovariance(pose=m.pose))'
    --import nav_msgs geometry_msgs --wait-for-start" />
  </group>

  <node name="head_l_stereo_camera_frame_pub" pkg="tf" type="static_transform_publisher"
        args="0 0 0 0 0 0 head_l_stereo_camera_link head_l_stereo_camera_frame 100" />

  <node name="head_r_stereo_camera_frame_pub" pkg="tf" type="static_transform_publisher"
        args="0 0 0 0 0 0 head_r_stereo_camera_link head_r_stereo_camera_frame 100" />

  <node name="head_rgbd_sensor_rgb_frame_pub" pkg="tf" type="static_transform_publisher"
        args="0 0 0 0 0 0 head_rgbd_sensor_link head_rgbd_sensor_rgb_frame 100" />

  <node name="head_rgbd_sensor_depth_frame_pub" pkg="tf" type="static_transform_publisher"
        args="0 0 0 0 0 0 head_rgbd_sensor_link head_rgbd_sensor_depth_frame 100" />

  <include file="$(find hsrb_gazebo_bringup)/launch/include/hsrb_relay_topics.xml">
    <arg name="namespace" value="$(arg namespace)" />
  </include>

  <!-- odometry_switcher -->
  <group ns="$(arg namespace)">
    <arg name="odometry_config" default="$(find hsrb_common_config)/params/hsrb_odometry_config.yaml" />
    <node name="odometry_switcher" pkg="tmc_odometry_switcher" type="odometry_switcher_node">
      <!--
      <remap from="switched_odom" to="odom"/>
      -->
      <!-- TUe added 3x -->
      <remap from="switched_odom" to="base/measurements"/>
      <remap from="wheel_odom" to="base/measurements_wheel"/>
      <remap from="laser_odom" to="base/measurements_laser"/>

      <rosparam command="load" file="$(arg odometry_config)"/>
      <param name="initial_odom" value="laser_odom" if="$(arg use_laser_odom)"/>
      <param name="initial_odom" value="wheel_odom" unless="$(arg use_laser_odom)"/>
    </node>
  </group>

</launch>
